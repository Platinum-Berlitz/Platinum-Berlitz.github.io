{"title":"Windows上常用数学环境的搭建","slug":"env","date":"2019-08-25T11:26:07.000Z","updated":"2019-08-25T04:07:47.985Z","comments":true,"excerpt":"","content":"<p>抱歉复出用了一些时间，落下了不少东西。不过既然是复出之后的第一篇博文，姑且就说说数学环境的配置吧。<br>\n笔者使用的操作系统是Windows，但是一些计算任务需要一些数学库，如blas，LAPACK，fftw乃至集成的Intel MKL，这些库在Windows上的配置很繁琐；另外大规模的计算需要用到计算集群——基本上不可避免地就是linux了。笔者之前使用的开发环境是MinGW64 + Visual Studio，这周的工作的一部分又是数学库的配置，因此推倒了从前用过的所有开发环境，改用类unix的环境了。</p>\n<h2 id=\"msys-and-mingw\"><a class=\"markdownIt-Anchor\" href=\"#msys-and-mingw\"></a> MSYS and MinGW</h2>\n<p>MSYS2为Windows提供了类unix的命令行环境，而MinGW提供了一套<strong>编译Windows程序</strong>的工具链——请注意这里标粗体的部分，MinGW的编译器(gcc等)使用.a, .so等linux格式（至少是后缀）的库文件，而编译出的是Windows下的库(.lib, .dll)或是可执行文件(.exe)。因此当MinGW链接Windows的库文件时，一般gcc的链接命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc -l &lt;libname&gt;</span><br></pre></td></tr></table></figure>\n<p>找不到对应的库。有说法称可以将库文件当作.o来链接，但MKL等库的设置很费事，因此MinGW在Windows系统上使用可能会有些麻烦。<br>\n笔者配置MSYS2和MinGW的步骤来自于<a href=\"https://www.math.ucla.edu/~wotaoyin/windows_coding.html\" target=\"_blank\" rel=\"noopener\">这篇文章</a>，包含了一些常用的数学库和并行库。</p>\n<h2 id=\"linux子系统以及mklips\"><a class=\"markdownIt-Anchor\" href=\"#linux子系统以及mklips\"></a> Linux子系统以及MKL/IPS</h2>\n<p>相信大家都会在Windows下建立Linux子系统了。Bash on Windows提供了一个Ubantu子系统，不过该子系统并没有安装gcc等程序。我们可以将apt的源换到<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\" target=\"_blank\" rel=\"noopener\">清华TUNA镜像站</a>，并输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update <span class=\"comment\"># 更新软件列表</span></span><br></pre></td></tr></table></figure>\n<p>以及</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get upgrade <span class=\"comment\"># 更新本地通过apt安装的软件</span></span><br></pre></td></tr></table></figure>\n<p>接着就是各位喜闻乐见的环节了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install gcc <span class=\"comment\"># 换成其他的东西也行，g++ gfortran什么的，需要编辑器的话vim，emacs都可以</span></span><br></pre></td></tr></table></figure>\n<p>子系统也可以安装mkl——甚至不妨下载一个<a href=\"https://software.intel.com/en-us/parallel-studio-xe\" target=\"_blank\" rel=\"noopener\">Parallel Studio</a>吧！使用教育邮箱申请并下载linux版本的Parallel Studio后，在压缩文件的目录中执行解压缩命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xzvf &lt;filename&gt;</span><br></pre></td></tr></table></figure>\n<p>并</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./install.sh</span><br></pre></td></tr></table></figure>\n<p>一般来说，Windows子系统在安装过程中会遇到缺少图形库的问题。在apt中搜素对应的库（或是去ubantu搜索）并apt-get install对应的库后就可以完成安装。在安装之后还需要将安装目录下bin中的compilevars.sh和libraries and compilers下mkl的bin中对应的…vars.sh拷贝到/etc/profile中，比如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> &lt;intel_dir&gt;/bin/compilevars.sh</span><br></pre></td></tr></table></figure>\n<p>(因为另一个电脑还没配置所以可能会忘记目录和确切的文件名)<br>\n在添加结束后，只需要使用intel的编译器(icc, icpc, ifort)并添加编译选项-mkl就可以使用MKL的数学函数了。</p>\n<h2 id=\"那么如果我不想用类unix命令行呢\"><a class=\"markdownIt-Anchor\" href=\"#那么如果我不想用类unix命令行呢\"></a> 那么，如果我不想用类Unix命令行呢</h2>\n<p>什么？你问我Windows？直接安装对应Windows版本的Intel Parallel Studio并使用Visual Studio就可以了，编译选项和链接调一下，这方面的教程还是不少的。不过你确定？（我个人讨厌Visual Studio和FORTRAN所以）（虽然也不是不会用就是，但是总感觉写起来很不爽）</p>\n<p><a href=\"https://www.pixiv.net/member_illust.php?mode=medium&amp;illust_id=28877820\" target=\"_blank\" rel=\"noopener\">页首背景pid=28877820</a></p>\n","thumbnail":"/img/post/env.jpg","categories":[],"tags":[{"name":"教程","path":"api/tags/教程.json"},{"name":"编程","path":"api/tags/编程.json"}]}